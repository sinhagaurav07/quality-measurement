name: GenerateReport
on:
  push:
    branches:
      # - develop Optional
      # - qa      Optional
      - master

  
jobs:
  GenerateReport:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 14
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      # - name: slackNotifyStart
      #   run: |
      #     curl -X POST -H 'Content-type: application/json' --data '{"text":" The Job ${{ github.job }} has Started üßéüßé‚Äç‚ôÄ. ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' {incoming webhook link}
      #     curl -X POST -H 'Content-type: application/json' --data '{"text":" ${{ github.actor}} has committed to ${{github.ref}}, commit message: |${{ github.event.head_commit.message}}|"}' {incoming webhook link}
      - name: Configure Sonar Properties
        run: |
            chmod 400 secrets.sh
            bash secrets.sh
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
      - name: Generate Raport and Upload to SonarQube
        run: |
          mvn clean install sonar:sonar
      # - name: slackNotifySuccess
      #   if: success()
      #   run: |
      #     curl -X POST -H 'Content-type: application/json' --data '{"text":" The Job ${{ github.job }} has Passed   ‚úÖ üòç   ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' {incoming webhook link}
      # - name: slackNotifyFail
      #   if: failure()
      #   run: |
      #     curl -X POST -H 'Content-type: application/json' --data '{"text":" The Job ${{ github.job }} has Failed   ‚ùå ü§¨   ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' {incoming webhook link}
